class ParticleSystem {
  ArrayList<Particle> particles;
  PVector origin;
  
  float coin = random(-600, 600);
  float coin1 = random(-600, 600);

  ParticleSystem(PVector position) {
    origin = position.get();
    particles = new ArrayList<Particle>();
  }

  void addParticle() {
    particles.add(new Particle(origin));
  }

  void addParticle(float x, float y) {
    particles.add(new Particle(new PVector(x, y)));
  }
  /*
  void applyForce(PVector f){ //not sure how relevant rn
  for (Particle p: particles){
    p.applyForce(f);
  }
  
  void applyRepeller(Repeller r) {
  for (Particle p: particles) {
    PVector force = r.repel(p);
    p.applyForce(force);
  }*/

  void run() {
    for (int i = particles.size()-1; i >= 0; i--) {
      Particle p = particles.get(i);
      p.run();
      
      pushStyle();
      fill(255,0,0);
      if (p.position.x>coin && p.position.y>coin && p.position.x<coin+trip && p.position.y<coin+trip){
       ellipse(coin,coin,trip2,trip2);
       bell.trigger();
       counter=counter+1;
      }
      
       if (p.position.x>coin1 && p.position.y>coin1 && p.position.x<coin1+trip && p.position.y<coin1]+trip){
       //ellipse(rectx[2],recty[2],trip2,trip2);
       bell4.trigger();
       //counter=counter+1;
      }
      
       if (p.position.x>rectx[3] && p.position.y>recty[3] && p.position.x<rectx[3]+trip && p.position.y<recty[3]+trip){
       ellipse(rectx[3],recty[3],trip2,trip2);
       bell3.trigger();
       counter=counter+1;
      }
      /*if (p.position.x>rectx[4] && p.position.y>recty[4] && p.position.x<rectx[4]+trip && p.position.y<recty[4]+trip){
       ellipse(rectx[4],recty[4],trip2,trip2);
       //bell4.trigger();
      }*/
      popStyle();
      if (p.isDead()) {
        particles.remove(i);
      }
    }
  }
}
