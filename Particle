class Particle {
  PVector position;
  PVector velocity;
  PVector acceleration;
  float lifespan;
  color c;
  float r = random(100);
  float v = 6.0;
  float positionx = width/2;
  float positiony= height/2;

  Particle(PVector l) {
   acceleration = new PVector(0,0.5);
    velocity = new PVector(random(-1,1),random(-2,0));
    position = l.get();
    lifespan = 70.0;
    float f = 1;
      for (int i = 0; i <in.bufferSize(); i++){
        f += abs(in.mix.get(i))*120;
         } 
    c = color(f,random(200),200);
  }

  void run() {
    update();
    display();
  }

  // Method to update position
  void update() {
    velocity.add(acceleration);
    position.add(velocity);
    lifespan -= 2.0;
  }

  // Method to display
  void display() {
    stroke(c,lifespan);
    strokeWeight(1);
     noFill();
     beginShape();
    for (int u = 0 ; u <in.bufferSize(); u++){
      v += abs(in.mix.get(u))*5;
      float x = v*cos(u);
      float y = v*sin(u);
      vertex(x + positionx,y + positiony);
    }
    endShape();
  }
  
  // Is the particle still useful?
  boolean isDead() {
    if (lifespan < 0.0) {
      return true;
    } else {
      return false;
    }
  }
}
