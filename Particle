class Particle {
  PVector position;
  PVector velocity;
  PVector acceleration;
  float lifespan;
 
  float r = random(-30,0);
  float s = random(-30,30);
  float t = random(-0.5,0);
  float u = random(-0.5,0);
  float size = random (0, 6);

  Particle(PVector l) {
   acceleration = new PVector(u,t);
    velocity = new PVector(s,r);
    position = l.get();
    lifespan = 200.0;
    
    //float f = 1;
    //  for (int i = 0; i <in.bufferSize(); i++){
    //    f += abs(in.mix.get(i))*120;
    //     } 
   // c = color(f,random(200),200);
    }

  void run() {
    update();
    display();
  }
  
   void applyForce(PVector force) {
    PVector f = force.get();
    f.div(mass);
    acceleration.add(f);
  }

  // Method to update position
  void update() {
    velocity.add(acceleration);
    position.add(velocity);
    lifespan -= 2.0;
  }

  // Method to display
  void display() {
    pushStyle();
    //stroke(c,lifespan);
    //strokeWeight(1);
    
     fill(lifespan);
     ellipse(position.x,+position.y,size,size);
    //scale(1+0.3*sin(frameCount*0.05));
    popStyle();
    
    // beginShape();
    //for (int u = 0 ; u <in.bufferSize(); u++){
     // v += abs(in.mix.get(u))*5;
     // float x = v*cos(u);
     // float y = v*sin(u);
     // vertex(x + positionx,y + positiony);
   // }
    //endShape();
  }
  
  // Is the particle still useful?
  boolean isDead() {
    if (lifespan < 0.0) {
      return true;
    } else {
      return false;
    }
  }
}
