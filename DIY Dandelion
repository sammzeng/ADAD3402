import processing.opengl.*;
import ddf.minim.*;
import ddf.minim.signals.*;
import ddf.minim.analysis.*;
import ddf.minim.effects.*;

Minim minim;
AudioInput in;

float v = 6;
float inc = 0.01;

void setup() {
  size(700, 700);
  noSmooth();
  minim  = new Minim (this);
  in = minim.getLineIn(Minim.STEREO,512);
}

void draw() {
  background(0);
  Translate(width/2,height/2); //places dandelion in the middle
  stroke(255);
  noFill();
  
  beginShape();
  for (int y = 0; y < height; y++) {// column
    for (int x = 0; x < width; x++) { //row
      float n = noise(v) * 100;
     for (int u = 0; u < in.mbufferSize(); u++){
      v = v+in.mix.get();
      float x = n*cos(i);
      float y = n*sin(i)
      vertex(x.y);
      }
    }
    endShape(CLOSE);
  }
}
